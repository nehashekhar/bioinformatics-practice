<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="8" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="152" started-at="2016-08-15T03:12:04Z" finished-at="2016-08-15T03:12:04Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="152" started-at="2016-08-15T03:12:04Z" finished-at="2016-08-15T03:12:04Z">
      <class name="bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest">
        <test-method status="PASS" signature="fibonacciPositiveTest()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="fibonacciPositiveTest" duration-ms="54" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fibonacciPositiveTest -->
        <test-method status="PASS" signature="fibonacciSeedValueOne()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="fibonacciSeedValueOne" duration-ms="3" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fibonacciSeedValueOne -->
        <test-method status="PASS" signature="fibonacciSeedValueZero()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="fibonacciSeedValueZero" duration-ms="2" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fibonacciSeedValueZero -->
        <test-method status="PASS" signature="fibonacciTest()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="fibonacciTest" duration-ms="2" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fibonacciTest -->
        <test-method status="PASS" signature="highKValue()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="highKValue" duration-ms="2" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[k should be a positive integer less than or equal to 5]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: k should be a positive integer less than or equal to 5
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelations.fibonacciSequence(RabbitsAndRecurrenceRelations.java:45)
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest.highKValue(RabbitsAndRecurrenceRelationsTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- highKValue -->
        <test-method status="PASS" signature="highNValue()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="highNValue" duration-ms="2" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[n should be a positive integer less than or equal to 40]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: n should be a positive integer less than or equal to 40
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelations.fibonacciSequence(RabbitsAndRecurrenceRelations.java:41)
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest.highNValue(RabbitsAndRecurrenceRelationsTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- highNValue -->
        <test-method status="PASS" signature="lowKValue()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="lowKValue" duration-ms="2" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[k should be a positive integer less than or equal to 5]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: k should be a positive integer less than or equal to 5
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelations.fibonacciSequence(RabbitsAndRecurrenceRelations.java:45)
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest.lowKValue(RabbitsAndRecurrenceRelationsTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lowKValue -->
        <test-method status="PASS" signature="lowNValue()[pri:0, instance:bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest@2c9f9fb0]" name="lowNValue" duration-ms="2" started-at="2016-08-14T20:12:04Z" finished-at="2016-08-14T20:12:04Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[n should be a positive integer less than or equal to 40]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: n should be a positive integer less than or equal to 40
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelations.fibonacciSequence(RabbitsAndRecurrenceRelations.java:41)
	at bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest.lowNValue(RabbitsAndRecurrenceRelationsTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lowNValue -->
      </class> <!-- bioinformatics_practice.rosalind.RabbitsAndRecurrenceRelationsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
